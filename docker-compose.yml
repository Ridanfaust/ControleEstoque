services:
  postgres:
    image: postgres:16
    container_name: estoque-db
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin123
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U admin -d postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4
    container_name: estoque-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@estoque.dev.br
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "8081:80"
    depends_on:
      postgres:
        condition: service_healthy

  backend:
    container_name: estoque-backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://estoque-db:5432/postgres
      SPRING_DATASOURCE_USERNAME: admin
      SPRING_DATASOURCE_PASSWORD: admin123
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy

  frontend:
    image: node:22
    container_name: estoque-frontend
    working_dir: /frontend-vue
    volumes:
      - ./frontend-vue:/frontend-vue
    ports:
      - "5173:5173"
    command: [ "sh", "-c", "npm install && npm run dev" ]
    depends_on:
      - backend

volumes:
  pgdata:
